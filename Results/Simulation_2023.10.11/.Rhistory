library(readr)
ncd_cv_R_newdat_min <- read_csv("ncd_cv_R_newdat_min.csv")
View(ncd_cv_R_newdat_min)
library(readr)
ncd_cv_R_newdat_1se <- read_csv("ncd_cv_R_newdat_1se.csv")
View(ncd_cv_R_newdat_1se)
library(readr)
ncd_nocv_newdat <- read_csv("ncd_nocv_newdat.csv")
View(ncd_nocv_newdat)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(error = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(message = F)
#knitr::opts_chunk$set(fig.width=8, fig.height=4)
library(tidyverse)
library(kableExtra)
library(mice)
library(gtsummary)
library(psych)
library(ggridges)
library(writexl)
ncd_cv_R_newdat_min = ncd_cv_R_newdat_min %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
min = ncd_cv_R_newdat_min %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(min)[1] = 'p'
min$p2p = as.numeric(min$p2) / as.numeric(min$p)
ncd_cv_R_newdat_1se = ncd_cv_R_newdat_1se %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
se = ncd_cv_R_newdat_1se %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(se)[1] = 'p'
se$p2p = as.numeric(se$p2) / as.numeric(se$p)
ncd_nocv_newdat = ncd_nocv_newdat %>% mutate(p2 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
r = ncd_nocv_newdat %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(r)[c(1,4)] = c('p','lambda0')
r$p2p = as.numeric(r$p2) / as.numeric(r$p)
View(se)
time_dat <- as.data.frame(cbind(min$p,min$p2,min$rho,min$sec_mean,se$sec_mean,r$sec_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
time_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'sec') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(sec),color=type)) + geom_smooth(se=F) + facet_grid(~rho)
time_dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$sec_mean,se$sec_mean,r$sec_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
View(time_dat)
time_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'run_time') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(run_time),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
rho.labs <- c("rho=0.1", "rho=0.5", "rho=0.9")
names(rho.labs) <- c("0.1", "0.5", "0.9")
time_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'run_time') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(run_time),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
nonz_Dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$non_zero_mean,se$non_zero_mean)) %>% set_names(c('p','p2','rho','min','se'))
nonz_Dat
nonz_Dat <- as.data.frame(cbind(min$p,min$p2p,min$p2p,min$rho,min$non_zero_mean,se$non_zero_mean)) %>% set_names(c('p','p2','p2p','rho','min','se'))
nonz_Dat
View(min)
nonz_Dat <- as.data.frame(cbind(min$p,min$p2,min$p2p,min$rho,min$non_zero_mean,se$non_zero_mean)) %>% set_names(c('p','p2','p2p','rho','min','se'))
nonz_Dat
time_dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(non_zero),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(non_zero),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F)
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P2',y='Non_zero',color='CV Type',title = 'Summary of Non_zero')
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) +
stat_poly_line(formula = y ~ x) +
stat_poly_eq(formula = y ~ x, aes(label = after_stat(eq.label))) +
geom_point() + labs(x='P2',y='Non_zero',color='CV Type',title = 'Summary of Non_zero')
library(ggpmisc)
install.packages("ggpmisc")
library(ggpmisc)
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) +
stat_poly_line(formula = y ~ x) +
stat_poly_eq(formula = y ~ x, aes(label = after_stat(eq.label))) +
geom_point() + labs(x='P2',y='Non_zero',color='CV Type',title = 'Summary of Non_zero')
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(error = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(message = F)
#knitr::opts_chunk$set(fig.width=8, fig.height=4)
library(tidyverse)
library(kableExtra)
library(mice)
library(gtsummary)
library(psych)
library(ggridges)
library(writexl)
library(readr)
ncd_cv_R_newdat_min <- read_csv("ncd_cv_R_newdat_min.csv")
View(ncd_cv_R_newdat_min)
library(readr)
ncd_cv_R_newdat_1se <- read_csv("ncd_cv_R_newdat_1se.csv")
View(ncd_cv_R_newdat_1se)
library(readr)
ncd_nocv_newdat <- read_csv("ncd_nocv_newdat.csv")
View(ncd_nocv_newdat)
ncd_cv_R_newdat_min = ncd_cv_R_newdat_min %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
min = ncd_cv_R_newdat_min %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(min)[1] = 'p'
min$p2p = as.numeric(min$p2) / as.numeric(min$p)
ncd_cv_R_newdat_1se = ncd_cv_R_newdat_1se %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
se = ncd_cv_R_newdat_1se %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(se)[1] = 'p'
se$p2p = as.numeric(se$p2) / as.numeric(se$p)
ncd_nocv_newdat = ncd_nocv_newdat %>% mutate(p2 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
r = ncd_nocv_newdat %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(r)[c(1,4)] = c('p','lambda0')
r$p2p = as.numeric(r$p2) / as.numeric(r$p)
nonz_Dat <- as.data.frame(cbind(min$p,min$p2,min$p2p,min$rho,min$non_zero_mean,se$non_zero_mean)) %>% set_names(c('p','p2','p2p','rho','min','se'))
library(ggpmisc)
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) +
stat_poly_line(formula = y ~ x) +
stat_poly_eq(formula = y ~ x, aes(label = after_stat(eq.label))) +
geom_point() + labs(x='P2',y='Non_zero',color='CV Type',title = 'Summary of Non_zero')
nonz_Dat <- as.data.frame(cbind(min$p,min$p2,min$p2p,min$rho,min$non_zero_mean,se$non_zero_mean)) %>% set_names(c('p','p2','p2p','rho','min','se'))
library(ggpmisc)
rho.labs <- c("rho=0.1", "rho=0.5", "rho=0.9")
names(rho.labs) <- c("0.1", "0.5", "0.9")
nonz_Dat  %>% pivot_longer(c(min,se), names_to = 'type',values_to = 'non_zero') %>%
ggplot(aes(x=as.numeric(p2),y=as.numeric(non_zero),color=type)) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) +
stat_poly_line(formula = y ~ x) +
stat_poly_eq(formula = y ~ x, aes(label = after_stat(eq.label))) +
geom_point() + labs(x='P2',y='Non_zero',color='CV Type',title = 'Summary of Non_zero')
time_dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$sec_mean,se$sec_mean,r$sec_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
time_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'run_time') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(run_time),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
acc_dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$acc_mean,se$acc_mean,r$acc_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
rho.labs <- c("rho=0.1", "rho=0.5", "rho=0.9")
names(rho.labs) <- c("0.1", "0.5", "0.9")
acc_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'acc') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(acc),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Accuracy',color='CV Type',linetype='P2 Proportion',title = 'Summary of accuracy')
time_dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$sec_mean,se$sec_mean,r$sec_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
time_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'run_time') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(run_time),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Running Time',color='CV Type',linetype='P2 Proportion',title = 'Summary of Running Time')
acc_dat <- as.data.frame(cbind(min$p,min$p2p,min$rho,min$acc_mean,se$acc_mean,r$acc_mean)) %>% set_names(c('p','p2','rho','min','se','nocv'))
rho.labs <- c("rho=0.1", "rho=0.5", "rho=0.9")
names(rho.labs) <- c("0.1", "0.5", "0.9")
acc_dat  %>% pivot_longer(c(min,se,nocv), names_to = 'type',values_to = 'acc') %>%
ggplot(aes(x=as.numeric(p),y=as.numeric(acc),color=type,linetype=as.factor(p2))) + geom_smooth(se=F) +
scale_linetype_manual(values = c("0.1" = "solid", "0.5" = "dashed",'0.9' = 'dotted')) +
facet_grid(~rho,labeller = labeller(rho = rho.labs)) + labs(x='P',y='Accuracy',color='CV Type',linetype='P2 Proportion',title = 'Summary of accuracy')
ncd_cv_R_newdat_min <- read_csv('ncd_cv_R_newdat_min.csv')
ncd_cv_R_newdat_min = ncd_cv_R_newdat_min %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
min = ncd_cv_R_newdat_min %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(min)[1] = 'p'
min$p2p = as.numeric(min$p2) / as.numeric(min$p)
setwd("~/Documents/GitHub/Risk_Model_Research/Results/Simulation_2023.10.11")
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(error = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(message = F)
#knitr::opts_chunk$set(fig.width=8, fig.height=4)
library(tidyverse)
library(kableExtra)
library(mice)
library(gtsummary)
library(psych)
library(ggridges)
library(writexl)
ncd_cv_R_newdat_min <- read_csv('ncd_cv_R_newdat_min.csv')
ncd_cv_R_newdat_min = ncd_cv_R_newdat_min %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_min$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
min = ncd_cv_R_newdat_min %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(min)[1] = 'p'
min$p2p = as.numeric(min$p2) / as.numeric(min$p)
ncd_cv_R_newdat_1se <- read_csv('ncd_cv_R_newdat_1se')
ncd_cv_R_newdat_1se <- read_csv('ncd_cv_R_newdat_1se.csv')
ncd_cv_R_newdat_1se = ncd_cv_R_newdat_1se %>% mutate(p2 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_cv_R_newdat_1se$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
se = ncd_cv_R_newdat_1se %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(se)[1] = 'p'
se$p2p = as.numeric(se$p2) / as.numeric(se$p)
ncd_nocv_newdat <- read_csv('ncd_nocv_newdat.csv')
ncd_nocv_newdat = ncd_nocv_newdat %>% mutate(p2 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[3])
})),
p3 = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[4])
})),
rho = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[5])
})),
rep = unlist(lapply(ncd_nocv_newdat$data, function(input_string) {
split_string <- unlist(strsplit(input_string, "_"))
return(split_string[6])
})))
r = ncd_nocv_newdat %>% group_by(p-1,p2,rho) %>% summarise(lambda0_mean = mean(lambda0),
non_zero_mean = mean(non_zeros),
sec_mean = mean(sec),
acc_mean = mean(acc),
sens_mean = mean(sens),
spec_mean = mean(spec))
names(r)[c(1,4)] = c('p','lambda0')
r$p2p = as.numeric(r$p2) / as.numeric(r$p)
